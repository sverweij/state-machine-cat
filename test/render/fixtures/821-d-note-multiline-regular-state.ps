%!PS-Adobe-3.0
%%Creator: graphviz version 13.1.1 (0)
%%Title: state transitions
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval
EncodingVector 45 /hyphen put

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset graphviz 0 0
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
       dup 1 exch div /InvScaleFactor exch def
       scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def
/tapered { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw text fitted to its expected width
/alignedtext {			% width text
	/text exch def
	/width exch def
	gsave
		width 0 gt {
			[] 0 setdash
			text stringwidth pop width exch sub text length div 0 text ashow
		} if
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def
/showpage { } def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
setupLatin1
%%Page: 1 1
%%PageBoundingBox: 36 36 359 156
%%PageOrientation: Portrait
<< /PageSize [359 156] >> setpagedevice
0 0 1 beginpage
gsave
36 36 323 120 boxprim clip newpath
1 1 set_scale 0 rotate 40 40 translate
[ /CropBox [36 36 359 156] /PAGES pdfmark
% a
gsave
0 0 0 nodecolor
12 /Helvetica set_font
139.256 90.6 moveto 36.02 (state a) alignedtext
2 setlinewidth
solid
0 0 0 nodecolor
newpath 140.723 77 moveto
140.723 77 173.813 77 173.813 77 curveto
179.546 77 185.279 82.733 185.279 88.467 curveto
185.279 88.467 185.279 99.933 185.279 99.933 curveto
185.279 105.667 179.546 111.4 173.813 111.4 curveto
173.813 111.4 140.723 111.4 140.723 111.4 curveto
134.989 111.4 129.256 105.667 129.256 99.933 curveto
129.256 99.933 129.256 88.467 129.256 88.467 curveto
129.256 82.733 134.989 77 140.723 77 curveto
stroke
grestore
% note_a
gsave
0.16667 0.2 1 nodecolor
newpath 308.535 68 moveto
0 68 lineto
0 0 lineto
314.535 0 lineto
314.535 62 lineto
closepath fill
1 setlinewidth
filled
0 0 0 nodecolor
newpath 308.535 68 moveto
0 68 lineto
0 0 lineto
314.535 0 lineto
314.535 62 lineto
closepath stroke
1 setlinewidth
filled
0 0 0 nodecolor
newpath 308.535 68 moveto
308.535 62 lineto
stroke
1 setlinewidth
filled
0 0 0 nodecolor
newpath 314.535 62 moveto
308.535 62 lineto
stroke
0 0 0 nodecolor
10 /Helvetica set_font
8 55 moveto 141.73 (This is a multi line note it should) alignedtext
0 0 0 nodecolor
10 /Helvetica set_font
8 43 moveto 191.22 (wrap in the graphics as it would in the input) alignedtext
0 0 0 nodecolor
10 /Helvetica set_font
8 31 moveto 298.54 (so in these lines between should & wrap and between input and so.) alignedtext
0 0 0 nodecolor
10 /Helvetica set_font
8 7 moveto 190.66 (The line above was intentionally left empty.) alignedtext
grestore
% a->note_a
gsave
1 setlinewidth
dashed
0 0 0 edgecolor
newpath 157.268 76.053 moveto
157.268 73.639 157.268 71.092 157.268 68.497 curveto
stroke
grestore
endpage
showpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
%%BoundingBox: 36 36 359 156
end
restore
%%EOF
