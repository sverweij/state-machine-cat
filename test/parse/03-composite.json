[
  {
    "title": "composite state with an empty statemachine",
    "program": "a{};",
    "pending": true,
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "statemachine": {}
        }
      ]
    }
  },
  {
    "title": "composite state with one sub state",
    "program": "a{b;};",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "statemachine": {
            "states": [
              {
                "name": "b",
                "type": "regular"
              }
            ]
          }
        }
      ]
    }
  },
  {
    "title": "composite state with a sub state with a sub state",
    "program": "a{b{c;};};",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "statemachine": {
            "states": [
              {
                "name": "b",
                "type": "regular",
                "statemachine": {
                  "states": [
                    {
                      "name": "c",
                      "type": "regular"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "title": "composite state with two sub states",
    "program": "a{b,c;};",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "statemachine": {
            "states": [
              {
                "name": "b",
                "type": "regular"
              },
              {
                "name": "c",
                "type": "regular"
              }
            ]
          }
        }
      ]
    }
  },
  {
    "title": "composite state with one internal, transition of declared states",
    "program": "a{b,c;b=>c;};",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "statemachine": {
            "states": [
              {
                "name": "b",
                "type": "regular"
              },
              {
                "name": "c",
                "type": "regular"
              }
            ],
            "transitions": [
              {
                "from": "b",
                "to": "c"
              }
            ]
          }
        }
      ]
    }
  },
  {
    "title": "composite state with an activity is legal here (it's not in UML)",
    "program": "# a note for composite state a\na: {b;};",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "note": ["a note for composite state a"],
          "statemachine": {
            "states": [
              {
                "name": "b",
                "type": "regular"
              }
            ]
          }
        }
      ]
    }
  },
  {
    "title": "composite state with an activity is legal here (it's not in UML)",
    "program": "a:an activity {b;};",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "actions": [
            {
              "type": "activity",
              "body": "an activity"
            }
          ],
          "statemachine": {
            "states": [
              {
                "name": "b",
                "type": "regular"
              }
            ]
          }
        }
      ]
    }
  },
  {
    "title": "composite state with one internal transition of undeclared states",
    "program": "a{b=>c;};",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "statemachine": {
            "states": [
              {
                "name": "b",
                "type": "regular"
              },
              {
                "name": "c",
                "type": "regular"
              }
            ],
            "transitions": [
              {
                "from": "b",
                "to": "c"
              }
            ]
          }
        }
      ]
    }
  },
  {
    "title": "composite state with one transition of a declared state to an external one",
    "program": "a{b=>c;},c;",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "statemachine": {
            "states": [
              {
                "name": "b",
                "type": "regular"
              }
            ],
            "transitions": [
              {
                "from": "b",
                "to": "c"
              }
            ]
          }
        },
        {
          "name": "c",
          "type": "regular"
        }
      ]
    }
  },
  {
    "title": "composite state with one transition of an external state to a declared one",
    "program": "a{c;b=>c;},b;",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "statemachine": {
            "states": [
              {
                "name": "c",
                "type": "regular"
              }
            ],
            "transitions": [
              {
                "from": "b",
                "to": "c"
              }
            ]
          }
        },
        {
          "name": "b",
          "type": "regular"
        }
      ]
    }
  },
  {
    "title": "composite state: deeper level implicit declarations > higher level implicit declarations",
    "program": "a{b=>c;};b=>c;",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "statemachine": {
            "states": [
              {
                "name": "b",
                "type": "regular"
              },
              {
                "name": "c",
                "type": "regular"
              }
            ],
            "transitions": [
              {
                "from": "b",
                "to": "c"
              }
            ]
          }
        }
      ],
      "transitions": [
        {
          "from": "b",
          "to": "c"
        }
      ]
    }
  },
  {
    "title": "composite state: deeper level implicit declarations < higher level explicit declarations",
    "program": "a{b=>c;},b,c;b=>c;",
    "ast": {
      "states": [
        {
          "name": "a",
          "type": "regular",
          "statemachine": {
            "states": [],
            "transitions": [
              {
                "from": "b",
                "to": "c"
              }
            ]
          }
        },
        {
          "name": "b",
          "type": "regular"
        },
        {
          "name": "c",
          "type": "regular"
        }
      ],
      "transitions": [
        {
          "from": "b",
          "to": "c"
        }
      ]
    }
  }
]
