name: install, lint, test - linux

on:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
  check:
    strategy:
      fail-fast: false
      matrix:
        node-version: [10.x, 12.x, 14.x, 15.x]
        platform:
          - ubuntu-latest

    runs-on: ${{matrix.platform}}

    steps:
      - name: check out
        uses: actions/checkout@v1
      # - name: cache node modules for ${{matrix.node-version}}@${{matrix.platform}}
      #   uses: actions/cache@v1
      #   with:
      #     path: node_modules
      #     key: ${{matrix.node-version}}@${{matrix.platform}}-build-${{hashFiles('package.json')}}
      #     restore-keys: |
      #       ${{matrix.node-version}}@${{matrix.platform}}-build-
      - name: set up node ${{matrix.node-version}}@${{matrix.platform}}
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node-version}}
      - name: install
        run: |
          node --version
          npm install
          apt-fast --assume-yes install graphviz
        shell: bash
        env:
          CI: true
      - name: lint (on latest node only)
        if: matrix.node-version == '15.x'
        run: |
          node --version
          npm run lint
        shell: bash
        env:
          CI: true
      - name: test
        run: |
          node --version
          npm run test:cover
        shell: bash
        env:
          CI: true
      - name: report coverage to code climate (on latest node only)
        if: matrix.node-version == '15.x'
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_TEST_COVERAGE_ID }}
