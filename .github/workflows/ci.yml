name: install, lint, test - linux

on:
  push:
    branches:
      - master
      - develop
  pull_request:
env:
  NODE_LATEST: 18.x

jobs:
  check-linux:
    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x, 16.x, 18.x]
        platform:
          - ubuntu-latest

    runs-on: ${{matrix.platform}}

    steps:
      - uses: google/wireit@setup-github-actions-caching/v1
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
      # - name: cache node modules for ${{matrix.node-version}}@${{matrix.platform}}
      #   uses: actions/cache@v1
      #   with:
      #     path: node_modules
      #     key: ${{matrix.node-version}}@${{matrix.platform}}-build-${{hashFiles('package.json')}}
      #     restore-keys: |
      #       ${{matrix.node-version}}@${{matrix.platform}}-build-
      - name: install
        run: |
          node --version
          npm install
          apt-fast --assume-yes install graphviz
        shell: bash
        env:
          CI: true
      - name: lint (on node ${{env.NODE_LATEST}} only)
        if: matrix.node-version == env.NODE_LATEST
        run: |
          node --version
          npm run depcruise:github-actions:markdown
          npm run depcruise:github-actions:mermaid
          npm run depcruise
          npm run lint
        shell: bash
        env:
          CI: true
      - name: test (on node != ${{env.NODE_LATEST}} only)
        if: matrix.node-version != env.NODE_LATEST
        run: |
          node --version
          npm run test
        shell: bash
        env:
          CI: true
      - name: test coverage (on node ${{env.NODE_LATEST}} only)
        if: matrix.node-version == env.NODE_LATEST
        run: |
          node --version
          npm run test:cover
        shell: bash
        env:
          CI: true
      - name: report coverage to code climate (on node ${{env.NODE_LATEST}} only)
        if: matrix.node-version == env.NODE_LATEST
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_TEST_COVERAGE_ID }}

  check-macos:
    strategy:
      fail-fast: false
    env:
      PLATFORM: macos-latest
    runs-on: macos-latest

    steps:
      - uses: google/wireit@setup-github-actions-caching/v1
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_LATEST}}
      # - name: cache node modules for ${{env.NODE_LATEST}}@${{env.PLATFORM}}
      #   uses: actions/cache@v3
      #   with:
      #     path: node_modules
      #     key: ${{env.NODE_LATEST}}@${{env.PLATFORM}}-build-${{hashFiles('package.json')}}
      #     restore-keys: |
      #       ${{env.NODE_LATEST}}@${{env.PLATFORM}}-build-
      - name: install
        run: |
          node --version
          npm install
          brew install graphviz
        shell: bash
        env:
          CI: true
      - name: test coverage
        run: |
          node --version
          npm run test:cover
        shell: bash
        env:
          CI: true

  check-windows:
    strategy:
      fail-fast: false
    env:
      PLATFORM: windows-latest
    runs-on: windows-latest

    steps:
      - uses: google/wireit@setup-github-actions-caching/v1
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_LATEST}}
      # - name: cache node modules for ${{matrix.node-version}}@${{matrix.platform}}
      #   uses: actions/cache@v1
      #   with:
      #     path: node_modules
      #     key: ${{matrix.node-version}}@${{matrix.platform}}-build-${{hashFiles('package.json')}}
      #     restore-keys: |
      #       ${{matrix.node-version}}@${{matrix.platform}}-build-
      - name: install
        run: |
          node --version
          npm install
        shell: bash
        env:
          CI: true
      - name: test
        run: |
          node --version
          npm run test
        shell: bash
        env:
          CI: true
